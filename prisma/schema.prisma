// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts    Account[]
  watchlists  Watchlist[]
  watchlistId String?     @db.ObjectId
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Watchlist {
  id               String            @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  userId           String            @db.ObjectId
  watchlistTickers WatchlistTicker[]

  user User @relation(fields: [userId], references: [id])
}

model WatchlistTicker {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  watchlistId String @db.ObjectId
  symbol      String
  price       Float?
  change      Float?
  marketCap   Float?
  ivr         Float?

  watchlist Watchlist @relation(fields: [watchlistId], references: [id])
}
